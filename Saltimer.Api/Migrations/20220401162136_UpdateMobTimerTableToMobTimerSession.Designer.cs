// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Saltimer.Api.Migrations
{
    [DbContext(typeof(SaltimerDBContext))]
    [Migration("20220401162136_UpdateMobTimerTableToMobTimerSession")]
    partial class UpdateMobTimerTableToMobTimerSession
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Saltimer.Api.Data.MobTimerSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BreakTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PausedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoundTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("MobTimerSession");
                });

            modelBuilder.Entity("Saltimer.Api.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Saltimer.Api.Data.UserMobSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MobTimerId")
                        .HasColumnType("int");

                    b.Property<int?>("MobTimerSessionId")
                        .HasColumnType("int");

                    b.Property<int>("Turn")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MobTimerSessionId");

                    b.ToTable("UserMobSession");
                });

            modelBuilder.Entity("Saltimer.Api.Data.MobTimerSession", b =>
                {
                    b.HasOne("Saltimer.Api.Data.User", "Owner")
                        .WithMany("MobTimers")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Saltimer.Api.Data.UserMobSession", b =>
                {
                    b.HasOne("Saltimer.Api.Data.MobTimerSession", null)
                        .WithMany("UserMobSessions")
                        .HasForeignKey("MobTimerSessionId");
                });

            modelBuilder.Entity("Saltimer.Api.Data.MobTimerSession", b =>
                {
                    b.Navigation("UserMobSessions");
                });

            modelBuilder.Entity("Saltimer.Api.Data.User", b =>
                {
                    b.Navigation("MobTimers");
                });
#pragma warning restore 612, 618
        }
    }
}
